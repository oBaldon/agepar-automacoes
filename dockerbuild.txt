#!/usr/bin/env bash
set -euo pipefail

# =========[ 0) Vars ]=========
ROOT="$PWD"

# Centralização: tudo em apps/validador-orcamento/shared
SHARED_ROOT="$ROOT/apps/validador-orcamento/shared"
SHARED_DATA="$SHARED_ROOT/data"
SHARED_OUT="$SHARED_ROOT/output"

API="http://localhost:8001"

# Garante diretórios (sem sudo)
mkdir -p "$SHARED_DATA" "$SHARED_OUT"

# (opcional, ajuda em ambientes com permissão chata)
# dá leitura/exec em pastas e leitura em arquivos pra qualquer usuário
chmod -R a+rX "$SHARED_ROOT" || true

# =========[ 1) Network ]=========
docker network ls | grep -q 'agepar-automacoes_default' || \
  docker network create agepar-automacoes_default

# =========[ 2) Redis ]=========
docker rm -f redis 2>/dev/null || true
docker run -d --name redis --restart unless-stopped \
  --network agepar-automacoes_default \
  -p 6379:6379 \
  redis:7-alpine

# =========[ 3) Worker ]=========
cd "$ROOT/apps/validador-orcamento/worker"
docker build -t agepar/validador-worker:dev .
docker rm -f validador-worker 2>/dev/null || true
docker run -d --name validador-worker --restart unless-stopped \
  --network agepar-automacoes_default \
  -e REDIS_URL="redis://redis:6379/1" \
  -e QUEUE_NAME="validador" \
  -v "$SHARED_DATA:/app/data:ro" \
  -v "$SHARED_OUT:/app/output" \
  -u "$(id -u)":"$(id -g)" \
  agepar/validador-worker:dev

# =========[ 4) API ]=========
cd "$ROOT/apps/validador-orcamento/api"
docker build -t agepar/validador-api:dev .
docker rm -f validador-api 2>/dev/null || true

# CORS_ORIGINS dinâmico (IPs privados + localhost)
IPS="$(ip -4 -o addr show scope global 2>/dev/null \
  | awk '{split($4,a,"/"); ip=a[1];
          if (ip ~ /^10\./ || ip ~ /^192\.168\./ || ip ~ /^172\.(1[6-9]|2[0-9]|3[0-1])\./) print ip }')"
if [ -z "${IPS:-}" ]; then
  IPS="$(hostname -I 2>/dev/null | tr ' ' '\n' \
    | awk '($0 ~ /^10\./ || $0 ~ /^192\.168\./ || $0 ~ /^172\.(1[6-9]|2[0-9]|3[0-1])\./){print $0}')"
fi

ORIGINS=""
if [ -n "${IPS:-}" ]; then
  # gera "http://IP:5173," para cada IP e remove quebras de linha
  ORIGINS="$(printf 'http://%s:5173,' $IPS | tr -d '\n')"
fi
ORIGINS="${ORIGINS}http://localhost:5173,http://127.0.0.1:5173"
# remove vírgula final se existir
ORIGINS="${ORIGINS%,}"
echo ">> CORS_ORIGINS=${ORIGINS}"

docker run -d --name validador-api --restart unless-stopped \
  --network agepar-automacoes_default \
  -p 8001:8000 \
  -e REDIS_URL="redis://redis:6379/1" \
  -e QUEUE_NAME="validador" \
  -e CORS_ORIGINS="$ORIGINS" \
  -v "$SHARED_DATA:/app/data" \
  -v "$SHARED_OUT:/app/output:ro" \
  -u "$(id -u)":"$(id -g)" \
  agepar/validador-api:dev


# =========[ 5) Health ]=========
curl -s "$API/health" | jq .
docker exec -it validador-api getent hosts redis || true

# =========[ 6) Fluxo JOBS ]=========

# ---- PREÇOS ----
JOB_ID=$(
curl -s "$API/jobs" \
  -H 'content-type: application/json' \
  -d "{
    \"op\": \"precos_auto\",
    \"orc\": \"data/orcamento2.xlsx\",
    \"sudecap\": \"data/sudecap_preco.xls\",
    \"sinapi\": \"data/sinapi_ccd.xlsx\",
    \"secid\": \"data/secid.xlsx\",
    \"tol_rel\": 0,
    \"comparar_desc\": true,
    \"out_dir\": \"output\"
  }" | jq -r .id
)
echo "Job (preços): $JOB_ID"
curl -s "$API/jobs/$JOB_ID" | jq .
curl -s "$API/jobs/$JOB_ID/result" | jq .

# ---- ESTRUTURA (opcional) ----
JOB2_ID=$(
curl -s "$API/jobs" \
  -H 'content-type: application/json' \
  -d "{
    \"op\": \"estrutura_auto\",
    \"orc\": \"data/orcamento2.xlsx\",
    \"sudecap\": \"data/sudecap_comp.xls\",
    \"sinapi\": \"data/sinapi_ccd.xlsx\",
    \"secid\": \"data/secid.xlsx\",
    \"out_dir\": \"output\"
  }" | jq -r .id
)
echo "Job (estrutura): $JOB2_ID"
curl -s "$API/jobs/$JOB2_ID" | jq .
curl -s "$API/jobs/$JOB2_ID/result" | jq .
